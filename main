#https://habr.com/post/322608/
#https://habr.com/post/250921/
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common import action_chains
import selenium.common.exceptions
import time
running = True
from selenium.webdriver.chrome.options import DesiredCapabilities
from selenium.webdriver.common.proxy import Proxy, ProxyType

from openpyxl import Workbook

BASE_URL = 'https://baon.ru'     #адрес сайта для парсинга




#https://gist.github.com/tushortz/cba8b25f9d80f584f807b65890f37be5
def get_proxies():
    co = webdriver.ChromeOptions()
    co.add_argument("log-level=3")
    co.add_argument("--headless")
    driver = webdriver.Chrome(chrome_options=co)
    driver.get("https://free-proxy-list.net/")

    PROXIES = []
    proxies = driver.find_elements_by_css_selector("tr[role='row']")
    for p in proxies:
        result = p.text.split(" ")

        if result[-1] == "yes":
            PROXIES.append(result[0]+":"+result[1])

    driver.close()
    return PROXIES





def proxy_driver(PROXIES):
    co = webdriver.ChromeOptions()
    co.add_argument("log-level=3")
    #co.add_argument("--headless")
    prox = Proxy()

    if PROXIES:
        pxy = PROXIES[-1]
    else:
        print("--- Proxies used up (%s)" % len(PROXIES))
        PROXIES = get_proxies()

    prox.proxy_type = ProxyType.MANUAL
    prox.http_proxy = pxy
    prox.socks_proxy = pxy
    prox.ssl_proxy = pxy

    capabilities = webdriver.DesiredCapabilities.CHROME
    prox.add_to_capabilities(capabilities)

    driver = webdriver.Chrome(chrome_options=co, desired_capabilities=capabilities)

    return driver
def get_page(url,driver):
    running = True
    while running:
        try:
            driver.get(url)

            assert "Телефоны"  in driver.page_source
            running = False
            #running = True
        except:
            new = ALL_PROXIES.pop()
            # reassign driver if fail to switch proxy
            driver = proxy_driver(ALL_PROXIES)
            print("--- Switched proxy to: %s" % new)
            time.sleep(1)

def main():
    #ALL_PROXIES = get_proxies()
    #driver = proxy_driver(ALL_PROXIES)
    co = webdriver.ChromeOptions()
    co.add_argument("log-level=3")
    #co.add_argument("--headless")
    driver = webdriver.Chrome(chrome_options=co)
    driver.get(BASE_URL+"/dealer/")
    #driver.maximize_window()
    #element = driver.find_element_by_xpath("//li[@class='cabinet']")

    jscode = '''
    var list = document.getElementsByClassName('float-cabinet ng-scope ng-hide');
    for (index = 0; index < list.length; ++index) {
    list[index].setAttribute('class','float-cabinet ng-scope'); }
    '''
    #retval = driver.execute_script(jscode);


    #element=driver.find_element_by_xpath("//input[@placeholder='email']")
    #element.send_keys("lde@mail.ru")
    #element = driver.find_element_by_xpath(
    #    "//form[@class='form-inline ng-pristine ng-invalid ng-invalid-required']/input[@class='form-control ng-pristine ng-empty ng-invalid ng-invalid-required ng-touched']"
     #   )
    #"//input[@type='password']"
    #element.send_keys("test")

    #element = driver.find_element_by_xpath(
    #    "//input[@class='form-control ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required'][1]")

    element = driver.find_element_by_xpath("//div[@class='header-navigation']/a")
    element.send_keys(Keys.TAB)
    action = action_chains.ActionChains(driver)
    action.send_keys("test")
    action.send_keys(Keys.TAB)
    action.send_keys("8520")
    action.perform()
    time.sleep(1)
    element = driver.find_element_by_xpath(
        "//a[@class='red-button small-button']")
    element.click()
    time.sleep(20)
    element = driver.find_element_by_xpath("//div[@class='close-button']")
    element.click()
    element = driver.find_element_by_xpath("//div[@class='cw-wrapper clearfix']/div[1]/a")
    element.click()
    #выбираем коллекцию
    element = driver.find_element_by_xpath("//div[@class='second-line']/select[@class='form-control'][1]")
    element.click()
    element.send_keys(Keys.DOWN)
    element.click()
    #   Муж. Жен.  Уни.  Дет.
    element = driver.find_element_by_xpath("//div[@class='second-line']/select[@class='form-control'][2]")
    element.click()
    element.send_keys(Keys.UP)
    element.send_keys(Keys.UP)
    element.send_keys(Keys.UP)
    element.send_keys(Keys.UP)
    element.click()
    for number in range(4):
        element = driver.find_element_by_xpath("//div[@class='second-line']/select[@class='form-control'][2]")
        element.click()
        element.send_keys(Keys.DOWN)
        element.click()
        #клац по кнопке
        element = driver.find_element_by_xpath("//form[@class='ng-pristine ng-valid']/div[@class='third-line']/a[@class='golden-button']")
        element.click()
        time.sleep(20)
        for element in driver.find_elements_by_xpath("//div[@class='model-item']"):
             if not "предзаказа" in element.text:
                element1=element.find_element_by_xpath("//p[@class='articul']")

    action.move_by_offset(200,-300)
    action.click().perform()
    lstCatPages = []
    # страницы каталога
    #get_page(BASE_URL,driver)

    for element in driver.find_elements_by_xpath("//li[@class='main-menu']/a"):
        lstCatPages.append(element.get_attribute("href")) if element.get_attribute("href") not in lstCatPages else None
        # добавляем в список вложеные подменю проверяем задвоение
    print("количество страниц каталога :" +str(len(lstCatPages)))


    lstGoodPages = []
    # страницы каталога товаров
    #lstGoodPages.append('https://baon.ru/catalog/tsb-tso-009663/kurtka-dlya-devochki-BJ038003/SNAKEWEEDPRINTED/')
    #lstGoodPages.append('https://baon.ru/catalog/tsb-tso-008920/bazovaya-kurtka-s-logotipom-B538201/SLOE/')
    #lstGoodPages.append('https://baon.ru/catalog/tsb-tso-009792/kurtka-dlya-mal-chika-BK538001/MOSS/')
    for page in lstCatPages:
        driver.get(page)
        for element in driver.find_elements_by_xpath("//div[@class='model-container']/span/a"):
            lstGoodPages.append(element.get_attribute("href")) if element.get_attribute("href") not in lstGoodPages else None
            #добавляем в список товаров ссылку,если такой ссылки нет, проверяем задвоение
        for element in driver.find_elements_by_xpath("//div[@class='paginator']/span/a"):
            lstCatPages.append(element.get_attribute("href")) if element.get_attribute("href") not in lstCatPages else None
            # добавляем в список пейджеры, проверяем задвоение
        print("количество страниц каталога :" + str(len(lstCatPages)))
        print("количество страниц товаров :" + str(len(lstGoodPages)))


    #lstGoodPages.append("https://ajento.ru/p336841792-ajento-muzhskoj-bomber.html")


    wb = Workbook()
    ws = wb.active
    pagesproxycount = 30
    ws.cell(column=1+0, row=1, value="ID")
    ws.cell(column=1+1, row=1, value="Название")
    ws.cell(column=1+2, row=1, value="Оригинальное")
    ws.cell(column=1+3, row=1, value="название")
    ws.cell(column=1+4, row=1, value="Цена")
    ws.cell(column=1+5, row=1, value="Количество")
    ws.cell(column=1+6, row=1, value="Размер")
    ws.cell(column=1+7, row=1, value="Артикул")
    ws.cell(column=1+8, row=1, value="Цвет")
    ws.cell(column=1+9, row=1, value="Единица измерения")
    ws.cell(column=1+10, row=1, value="Описание")
    ws.cell(column=1+11, row=1, value="Фотография")
    ws.cell(column=1+12, row=1, value="Альбом")
    ws.cell(column=1+13, row=1, value="Позиция")
    ws.cell(column=1+14, row=1, value="Отображать комментарий")
    ws.cell(column=1+15, row=1, value="Отображать в каталоге")
    ws.cell(column=1+16, row=1, value="Включить ряды")
    ws.cell(column=1+17, row=1, value="Ссылка на источник")
    ws.cell(column=1+18, row=1, value="Обновить фото")


    i=1
    for page in lstGoodPages:
        url = ""  # url
        cost = ""  # Цена
        size = ""  # Размер
        art = ""  # Артикул
        color = ""  # Цвет
        edizm = ""  # Единица    измерения
        descr = ""  # // Описание
        album = ""  # // Альбом
        position = ""  # Позиция
        picture = ""  # // Ссылка на картинку
        name = ""  # Название

        print(page)

        driver.get(page)
        i+=1

        url = page

        element = driver.find_element_by_xpath("//div[@class='center-col']/h1")
        name = (element.text)

        element = driver.find_element_by_xpath("//td[1]/span[@class='main-price']")
        cost=(element.text)

        for element in driver.find_elements_by_xpath("//div[@class='size']/div/div"):
            size+=element.text\
                  +','



        element = driver.find_element_by_xpath("//p[@class='articul']")
        art = (element.text)
        try:
            element = driver.find_element_by_xpath("//div[@class='description-block']/div")
            descr = (element.text)+' , '
        except selenium.common.exceptions.NoSuchElementException:
            None
        try:
                element = driver.find_element_by_xpath("//li[@class='b-product-data__item b-product-data__item_type_selling']")
                descr += (element.text)
        except selenium.common.exceptions.NoSuchElementException:
                None
        try:
            for element in driver.find_elements_by_xpath("//div[@class='model-link-navigation']/a")[2:]:
                album += (element.text)+'->'
        except selenium.common.exceptions.NoSuchElementException:
            None
        try:
            element = driver.find_element_by_xpath("//img[@class='cs-product-image__img']")
            picture += element.get_attribute("src")
        except selenium.common.exceptions.NoSuchElementException:
            None
        ws.cell(column=1+1, row=i, value=name)
        ws.cell(column=1+4, row=i, value=cost)
        ws.cell(column=1+6, row=i, value=size)
        ws.cell(column=1+7, row=i, value=art)
        ws.cell(column=1+8, row=i, value=color)
        ws.cell(column=1+9, row=i, value=edizm)
        ws.cell(column=1+10,row=i, value=descr)
        ws.cell(column=1+12,row=i, value=album)
        ws.cell(column=1+13,row=i, value=i - 1)
        ws.cell(column=1+17,row=i, value=picture)
        ws.cell(column=1+18,row=i, value=url)
    wb.save(filename="c:\\tmp\\baon.xlsx")


main()
#запуск приложения
